<%
(function(){
    include("/jagg/jagg.jag");
    var ssoIdpProvider = jagg.module('manager').getAPIStoreObj();
    var dataConfi = require('/config/store.js').config(),
        sso = require("sso"),
        process = require("process"),
        caramel = require('caramel'),
        uuid = require('uuid'),
        sessionId = session.getId(),
        requestURI = request.getRequestURI(),
        requestedPage = request.getParameter("requestedPage"),
        header = request.getParameter("header"),
        refererFromHeader = request.getHeader("referer"),
        requestURL = request.getRequestURL(),
        encodedSAMLAuthRequest = sso.client.getEncodedSAMLAuthRequest(dataConfi.ssoConfiguration.issuer),
        log = new Log(),
        serverHost = process.getProperty('server.host'),
        postUrl = dataConfi.ssoConfiguration.identityProviderURL;

        //Extract tenant domain from store URL
        var requestedTenant;
        if(requestURI.indexOf("/t/") !== -1) {
            var requestContextPaths = requestURI.split("/t/");
            requestedTenant = requestContextPaths[1].split("/") [0];
            postUrl = postUrl + "?storeTenantDomain=" + requestedTenant;
        }

        var proxyFriendlyRequestURL = requestURL;
        var customDomain = request.getHeader("wso2-cloud-custom-domain");

        if(customDomain){

          // If a custom domain is set,
          // replace the segments enclosed with [], in https://[host/user-portal/t/tenant15.com]/home.jsp
          proxyFriendlyRequestURL = proxyFriendlyRequestURL.replace(/:\/\/.*\/t\/.+?\//g, "://" + customDomain + "/")
        }else if(caramel.configs().reverseProxyEnabled && caramel.configs().reverseProxyHost){
          proxyFriendlyRequestURL = proxyFriendlyRequestURL.replace(/http[s]?:\/\/.*?\//g, caramel.configs().reverseProxyHost + "/")
        }

        if(header && header == true) {
            proxyFriendlyRequestURL = proxyFriendlyRequestURL +"?header=true";
        }

        // Preserve the relay state.
        var relayStates = application.get("relayStates");

        if(!relayStates){
          relayStates = {};
          application.put("relayStates", relayStates);
        }

        var relayStateID = uuid.generate().toString();

        var relayState = {};
        relayState.requestedURL = proxyFriendlyRequestURL;
        relayState.applicationTenantDomain = requestedTenant;

        relayStates[relayStateID] = relayState;

        log.info("Loged = " + session.get("Loged"));

    if (!session.get("Loged")) {
        %>
            <div>
                <p>You are now being redirected to Identity Server. If the
                redirection fails, please click on the button below.</p>
                <form method="post" action="<%=postUrl%>">
                    <p>
                        <input type="hidden" name="SAMLRequest" value ="<%= encodedSAMLAuthRequest %>"/>
                        <input type="hidden" name="RelayState" value ="<%= relayStateID %>"/>
                        <input type="hidden" name="SSOAuthSessionID" value="<%= sessionId %>"/>
                        <button type="submit">Redirect manually</button>
                    </p>
                </form>
            </div>
            <script type="text/javascript" >
                document.forms[0].submit();
            </script>
        <%
    }
}());
%>
